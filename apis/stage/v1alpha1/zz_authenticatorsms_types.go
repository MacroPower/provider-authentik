/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AuthenticatorSMSInitParameters struct {

	// Defaults to `basic`.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	ConfigureFlow *string `json:"configureFlow,omitempty" tf:"configure_flow,omitempty"`

	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	FromNumber *string `json:"fromNumber,omitempty" tf:"from_number,omitempty"`

	Mapping *string `json:"mapping,omitempty" tf:"mapping,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Defaults to `twilio`.
	SMSProvider *string `json:"smsProvider,omitempty" tf:"sms_provider,omitempty"`

	// Defaults to `false`.
	VerifyOnly *bool `json:"verifyOnly,omitempty" tf:"verify_only,omitempty"`
}

type AuthenticatorSMSObservation struct {

	// Defaults to `basic`.
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	ConfigureFlow *string `json:"configureFlow,omitempty" tf:"configure_flow,omitempty"`

	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	FromNumber *string `json:"fromNumber,omitempty" tf:"from_number,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	Mapping *string `json:"mapping,omitempty" tf:"mapping,omitempty"`

	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Defaults to `twilio`.
	SMSProvider *string `json:"smsProvider,omitempty" tf:"sms_provider,omitempty"`

	// Defaults to `false`.
	VerifyOnly *bool `json:"verifyOnly,omitempty" tf:"verify_only,omitempty"`
}

type AuthenticatorSMSParameters struct {

	// +kubebuilder:validation:Optional
	AccountSidSecretRef v1.SecretKeySelector `json:"accountSidSecretRef" tf:"-"`

	// +kubebuilder:validation:Optional
	AuthPasswordSecretRef *v1.SecretKeySelector `json:"authPasswordSecretRef,omitempty" tf:"-"`

	// +kubebuilder:validation:Optional
	AuthSecretRef v1.SecretKeySelector `json:"authSecretRef" tf:"-"`

	// Defaults to `basic`.
	// +kubebuilder:validation:Optional
	AuthType *string `json:"authType,omitempty" tf:"auth_type,omitempty"`

	// +kubebuilder:validation:Optional
	ConfigureFlow *string `json:"configureFlow,omitempty" tf:"configure_flow,omitempty"`

	// +kubebuilder:validation:Optional
	FriendlyName *string `json:"friendlyName,omitempty" tf:"friendly_name,omitempty"`

	// +kubebuilder:validation:Optional
	FromNumber *string `json:"fromNumber,omitempty" tf:"from_number,omitempty"`

	// +kubebuilder:validation:Optional
	Mapping *string `json:"mapping,omitempty" tf:"mapping,omitempty"`

	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Defaults to `twilio`.
	// +kubebuilder:validation:Optional
	SMSProvider *string `json:"smsProvider,omitempty" tf:"sms_provider,omitempty"`

	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	VerifyOnly *bool `json:"verifyOnly,omitempty" tf:"verify_only,omitempty"`
}

// AuthenticatorSMSSpec defines the desired state of AuthenticatorSMS
type AuthenticatorSMSSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AuthenticatorSMSParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AuthenticatorSMSInitParameters `json:"initProvider,omitempty"`
}

// AuthenticatorSMSStatus defines the observed state of AuthenticatorSMS.
type AuthenticatorSMSStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AuthenticatorSMSObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// AuthenticatorSMS is the Schema for the AuthenticatorSMSs API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type AuthenticatorSMS struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.accountSidSecretRef)",message="spec.forProvider.accountSidSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authSecretRef)",message="spec.forProvider.authSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.fromNumber) || (has(self.initProvider) && has(self.initProvider.fromNumber))",message="spec.forProvider.fromNumber is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   AuthenticatorSMSSpec   `json:"spec"`
	Status AuthenticatorSMSStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AuthenticatorSMSList contains a list of AuthenticatorSMSs
type AuthenticatorSMSList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AuthenticatorSMS `json:"items"`
}

// Repository type metadata.
var (
	AuthenticatorSMS_Kind             = "AuthenticatorSMS"
	AuthenticatorSMS_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AuthenticatorSMS_Kind}.String()
	AuthenticatorSMS_KindAPIVersion   = AuthenticatorSMS_Kind + "." + CRDGroupVersion.String()
	AuthenticatorSMS_GroupVersionKind = CRDGroupVersion.WithKind(AuthenticatorSMS_Kind)
)

func init() {
	SchemeBuilder.Register(&AuthenticatorSMS{}, &AuthenticatorSMSList{})
}
