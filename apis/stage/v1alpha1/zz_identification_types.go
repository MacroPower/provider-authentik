/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IdentificationInitParameters struct {

	// (Boolean)
	CaseInsensitiveMatching *bool `json:"caseInsensitiveMatching,omitempty" tf:"case_insensitive_matching,omitempty"`

	// (String)
	EnrollmentFlow *string `json:"enrollmentFlow,omitempty" tf:"enrollment_flow,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	PasswordStage *string `json:"passwordStage,omitempty" tf:"password_stage,omitempty"`

	// (String)
	PasswordlessFlow *string `json:"passwordlessFlow,omitempty" tf:"passwordless_flow,omitempty"`

	// (String)
	RecoveryFlow *string `json:"recoveryFlow,omitempty" tf:"recovery_flow,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	ShowMatchedUser *bool `json:"showMatchedUser,omitempty" tf:"show_matched_user,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	ShowSourceLabels *bool `json:"showSourceLabels,omitempty" tf:"show_source_labels,omitempty"`

	// (List of String)
	Sources []*string `json:"sources,omitempty" tf:"sources,omitempty"`

	// (List of String)
	UserFields []*string `json:"userFields,omitempty" tf:"user_fields,omitempty"`
}

type IdentificationObservation struct {

	// (Boolean)
	CaseInsensitiveMatching *bool `json:"caseInsensitiveMatching,omitempty" tf:"case_insensitive_matching,omitempty"`

	// (String)
	EnrollmentFlow *string `json:"enrollmentFlow,omitempty" tf:"enrollment_flow,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	PasswordStage *string `json:"passwordStage,omitempty" tf:"password_stage,omitempty"`

	// (String)
	PasswordlessFlow *string `json:"passwordlessFlow,omitempty" tf:"passwordless_flow,omitempty"`

	// (String)
	RecoveryFlow *string `json:"recoveryFlow,omitempty" tf:"recovery_flow,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	ShowMatchedUser *bool `json:"showMatchedUser,omitempty" tf:"show_matched_user,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	ShowSourceLabels *bool `json:"showSourceLabels,omitempty" tf:"show_source_labels,omitempty"`

	// (List of String)
	Sources []*string `json:"sources,omitempty" tf:"sources,omitempty"`

	// (List of String)
	UserFields []*string `json:"userFields,omitempty" tf:"user_fields,omitempty"`
}

type IdentificationParameters struct {

	// (Boolean)
	// +kubebuilder:validation:Optional
	CaseInsensitiveMatching *bool `json:"caseInsensitiveMatching,omitempty" tf:"case_insensitive_matching,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	EnrollmentFlow *string `json:"enrollmentFlow,omitempty" tf:"enrollment_flow,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	PasswordStage *string `json:"passwordStage,omitempty" tf:"password_stage,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	PasswordlessFlow *string `json:"passwordlessFlow,omitempty" tf:"passwordless_flow,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	RecoveryFlow *string `json:"recoveryFlow,omitempty" tf:"recovery_flow,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	// +kubebuilder:validation:Optional
	ShowMatchedUser *bool `json:"showMatchedUser,omitempty" tf:"show_matched_user,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	ShowSourceLabels *bool `json:"showSourceLabels,omitempty" tf:"show_source_labels,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	Sources []*string `json:"sources,omitempty" tf:"sources,omitempty"`

	// (List of String)
	// +kubebuilder:validation:Optional
	UserFields []*string `json:"userFields,omitempty" tf:"user_fields,omitempty"`
}

// IdentificationSpec defines the desired state of Identification
type IdentificationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IdentificationParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider IdentificationInitParameters `json:"initProvider,omitempty"`
}

// IdentificationStatus defines the observed state of Identification.
type IdentificationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IdentificationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Identification is the Schema for the Identifications API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type Identification struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   IdentificationSpec   `json:"spec"`
	Status IdentificationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IdentificationList contains a list of Identifications
type IdentificationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Identification `json:"items"`
}

// Repository type metadata.
var (
	Identification_Kind             = "Identification"
	Identification_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Identification_Kind}.String()
	Identification_KindAPIVersion   = Identification_Kind + "." + CRDGroupVersion.String()
	Identification_GroupVersionKind = CRDGroupVersion.WithKind(Identification_Kind)
)

func init() {
	SchemeBuilder.Register(&Identification{}, &IdentificationList{})
}
