/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TenantInitParameters struct {

	// (String) JSON format expected. Use jsonencode() to pass objects. Defaults to {}.
	// JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// (String)
	BrandingFavicon *string `json:"brandingFavicon,omitempty" tf:"branding_favicon,omitempty"`

	// (String)
	BrandingLogo *string `json:"brandingLogo,omitempty" tf:"branding_logo,omitempty"`

	// (String) Defaults to authentik.
	// Defaults to `authentik`.
	BrandingTitle *string `json:"brandingTitle,omitempty" tf:"branding_title,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	Default *bool `json:"default,omitempty" tf:"default,omitempty"`

	// (String)
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) Defaults to days=365.
	// Defaults to `days=365`.
	EventRetention *string `json:"eventRetention,omitempty" tf:"event_retention,omitempty"`

	// (String)
	FlowAuthentication *string `json:"flowAuthentication,omitempty" tf:"flow_authentication,omitempty"`

	// (String)
	FlowDeviceCode *string `json:"flowDeviceCode,omitempty" tf:"flow_device_code,omitempty"`

	// (String)
	FlowInvalidation *string `json:"flowInvalidation,omitempty" tf:"flow_invalidation,omitempty"`

	// (String)
	FlowRecovery *string `json:"flowRecovery,omitempty" tf:"flow_recovery,omitempty"`

	// (String)
	FlowUnenrollment *string `json:"flowUnenrollment,omitempty" tf:"flow_unenrollment,omitempty"`

	// (String)
	FlowUserSettings *string `json:"flowUserSettings,omitempty" tf:"flow_user_settings,omitempty"`

	// (String)
	WebCertificate *string `json:"webCertificate,omitempty" tf:"web_certificate,omitempty"`
}

type TenantObservation struct {

	// (String) JSON format expected. Use jsonencode() to pass objects. Defaults to {}.
	// JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// (String)
	BrandingFavicon *string `json:"brandingFavicon,omitempty" tf:"branding_favicon,omitempty"`

	// (String)
	BrandingLogo *string `json:"brandingLogo,omitempty" tf:"branding_logo,omitempty"`

	// (String) Defaults to authentik.
	// Defaults to `authentik`.
	BrandingTitle *string `json:"brandingTitle,omitempty" tf:"branding_title,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	Default *bool `json:"default,omitempty" tf:"default,omitempty"`

	// (String)
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) Defaults to days=365.
	// Defaults to `days=365`.
	EventRetention *string `json:"eventRetention,omitempty" tf:"event_retention,omitempty"`

	// (String)
	FlowAuthentication *string `json:"flowAuthentication,omitempty" tf:"flow_authentication,omitempty"`

	// (String)
	FlowDeviceCode *string `json:"flowDeviceCode,omitempty" tf:"flow_device_code,omitempty"`

	// (String)
	FlowInvalidation *string `json:"flowInvalidation,omitempty" tf:"flow_invalidation,omitempty"`

	// (String)
	FlowRecovery *string `json:"flowRecovery,omitempty" tf:"flow_recovery,omitempty"`

	// (String)
	FlowUnenrollment *string `json:"flowUnenrollment,omitempty" tf:"flow_unenrollment,omitempty"`

	// (String)
	FlowUserSettings *string `json:"flowUserSettings,omitempty" tf:"flow_user_settings,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	WebCertificate *string `json:"webCertificate,omitempty" tf:"web_certificate,omitempty"`
}

type TenantParameters struct {

	// (String) JSON format expected. Use jsonencode() to pass objects. Defaults to {}.
	// JSON format expected. Use jsonencode() to pass objects. Defaults to `{}`.
	// +kubebuilder:validation:Optional
	Attributes *string `json:"attributes,omitempty" tf:"attributes,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	BrandingFavicon *string `json:"brandingFavicon,omitempty" tf:"branding_favicon,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	BrandingLogo *string `json:"brandingLogo,omitempty" tf:"branding_logo,omitempty"`

	// (String) Defaults to authentik.
	// Defaults to `authentik`.
	// +kubebuilder:validation:Optional
	BrandingTitle *string `json:"brandingTitle,omitempty" tf:"branding_title,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	Default *bool `json:"default,omitempty" tf:"default,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Domain *string `json:"domain,omitempty" tf:"domain,omitempty"`

	// (String) Defaults to days=365.
	// Defaults to `days=365`.
	// +kubebuilder:validation:Optional
	EventRetention *string `json:"eventRetention,omitempty" tf:"event_retention,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	FlowAuthentication *string `json:"flowAuthentication,omitempty" tf:"flow_authentication,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	FlowDeviceCode *string `json:"flowDeviceCode,omitempty" tf:"flow_device_code,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	FlowInvalidation *string `json:"flowInvalidation,omitempty" tf:"flow_invalidation,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	FlowRecovery *string `json:"flowRecovery,omitempty" tf:"flow_recovery,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	FlowUnenrollment *string `json:"flowUnenrollment,omitempty" tf:"flow_unenrollment,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	FlowUserSettings *string `json:"flowUserSettings,omitempty" tf:"flow_user_settings,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	WebCertificate *string `json:"webCertificate,omitempty" tf:"web_certificate,omitempty"`
}

// TenantSpec defines the desired state of Tenant
type TenantSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TenantParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider TenantInitParameters `json:"initProvider,omitempty"`
}

// TenantStatus defines the observed state of Tenant.
type TenantStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TenantObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Tenant is the Schema for the Tenants API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type Tenant struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.domain) || (has(self.initProvider) && has(self.initProvider.domain))",message="spec.forProvider.domain is a required parameter"
	Spec   TenantSpec   `json:"spec"`
	Status TenantStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TenantList contains a list of Tenants
type TenantList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Tenant `json:"items"`
}

// Repository type metadata.
var (
	Tenant_Kind             = "Tenant"
	Tenant_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Tenant_Kind}.String()
	Tenant_KindAPIVersion   = Tenant_Kind + "." + CRDGroupVersion.String()
	Tenant_GroupVersionKind = CRDGroupVersion.WithKind(Tenant_Kind)
)

func init() {
	SchemeBuilder.Register(&Tenant{}, &TenantList{})
}
