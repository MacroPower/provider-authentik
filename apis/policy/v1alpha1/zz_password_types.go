/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PasswordInitParameters struct {

	// (Number)
	AmountDigits *float64 `json:"amountDigits,omitempty" tf:"amount_digits,omitempty"`

	// (Number)
	AmountLowercase *float64 `json:"amountLowercase,omitempty" tf:"amount_lowercase,omitempty"`

	// (Number)
	AmountSymbols *float64 `json:"amountSymbols,omitempty" tf:"amount_symbols,omitempty"`

	// (Number)
	AmountUppercase *float64 `json:"amountUppercase,omitempty" tf:"amount_uppercase,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	CheckHaveIBeenPwned *bool `json:"checkHaveIBeenPwned,omitempty" tf:"check_have_i_been_pwned,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	CheckStaticRules *bool `json:"checkStaticRules,omitempty" tf:"check_static_rules,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	CheckZxcvbn *bool `json:"checkZxcvbn,omitempty" tf:"check_zxcvbn,omitempty"`

	// (String)
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	ExecutionLogging *bool `json:"executionLogging,omitempty" tf:"execution_logging,omitempty"`

	// (Number) Defaults to 1.
	// Defaults to `1`.
	HibpAllowedCount *float64 `json:"hibpAllowedCount,omitempty" tf:"hibp_allowed_count,omitempty"`

	// (Number)
	LengthMin *float64 `json:"lengthMin,omitempty" tf:"length_min,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defaults to password.
	// Defaults to `password`.
	PasswordField *string `json:"passwordField,omitempty" tf:"password_field,omitempty"`

	// ./:;<=>?@[\]^_{|}~`.
	// Defaults to `!\"#$%&'()*+,-./:;<=>?@[\]^_`{|}~`.
	SymbolCharset *string `json:"symbolCharset,omitempty" tf:"symbol_charset,omitempty"`

	// (Number) Defaults to 2.
	// Defaults to `2`.
	ZxcvbnScoreThreshold *float64 `json:"zxcvbnScoreThreshold,omitempty" tf:"zxcvbn_score_threshold,omitempty"`
}

type PasswordObservation struct {

	// (Number)
	AmountDigits *float64 `json:"amountDigits,omitempty" tf:"amount_digits,omitempty"`

	// (Number)
	AmountLowercase *float64 `json:"amountLowercase,omitempty" tf:"amount_lowercase,omitempty"`

	// (Number)
	AmountSymbols *float64 `json:"amountSymbols,omitempty" tf:"amount_symbols,omitempty"`

	// (Number)
	AmountUppercase *float64 `json:"amountUppercase,omitempty" tf:"amount_uppercase,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	CheckHaveIBeenPwned *bool `json:"checkHaveIBeenPwned,omitempty" tf:"check_have_i_been_pwned,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	CheckStaticRules *bool `json:"checkStaticRules,omitempty" tf:"check_static_rules,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	CheckZxcvbn *bool `json:"checkZxcvbn,omitempty" tf:"check_zxcvbn,omitempty"`

	// (String)
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	ExecutionLogging *bool `json:"executionLogging,omitempty" tf:"execution_logging,omitempty"`

	// (Number) Defaults to 1.
	// Defaults to `1`.
	HibpAllowedCount *float64 `json:"hibpAllowedCount,omitempty" tf:"hibp_allowed_count,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Number)
	LengthMin *float64 `json:"lengthMin,omitempty" tf:"length_min,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defaults to password.
	// Defaults to `password`.
	PasswordField *string `json:"passwordField,omitempty" tf:"password_field,omitempty"`

	// ./:;<=>?@[\]^_{|}~`.
	// Defaults to `!\"#$%&'()*+,-./:;<=>?@[\]^_`{|}~`.
	SymbolCharset *string `json:"symbolCharset,omitempty" tf:"symbol_charset,omitempty"`

	// (Number) Defaults to 2.
	// Defaults to `2`.
	ZxcvbnScoreThreshold *float64 `json:"zxcvbnScoreThreshold,omitempty" tf:"zxcvbn_score_threshold,omitempty"`
}

type PasswordParameters struct {

	// (Number)
	// +kubebuilder:validation:Optional
	AmountDigits *float64 `json:"amountDigits,omitempty" tf:"amount_digits,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	AmountLowercase *float64 `json:"amountLowercase,omitempty" tf:"amount_lowercase,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	AmountSymbols *float64 `json:"amountSymbols,omitempty" tf:"amount_symbols,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	AmountUppercase *float64 `json:"amountUppercase,omitempty" tf:"amount_uppercase,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	CheckHaveIBeenPwned *bool `json:"checkHaveIBeenPwned,omitempty" tf:"check_have_i_been_pwned,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	// +kubebuilder:validation:Optional
	CheckStaticRules *bool `json:"checkStaticRules,omitempty" tf:"check_static_rules,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	CheckZxcvbn *bool `json:"checkZxcvbn,omitempty" tf:"check_zxcvbn,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	ErrorMessage *string `json:"errorMessage,omitempty" tf:"error_message,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	ExecutionLogging *bool `json:"executionLogging,omitempty" tf:"execution_logging,omitempty"`

	// (Number) Defaults to 1.
	// Defaults to `1`.
	// +kubebuilder:validation:Optional
	HibpAllowedCount *float64 `json:"hibpAllowedCount,omitempty" tf:"hibp_allowed_count,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	LengthMin *float64 `json:"lengthMin,omitempty" tf:"length_min,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Defaults to password.
	// Defaults to `password`.
	// +kubebuilder:validation:Optional
	PasswordField *string `json:"passwordField,omitempty" tf:"password_field,omitempty"`

	// ./:;<=>?@[\]^_{|}~`.
	// Defaults to `!\"#$%&'()*+,-./:;<=>?@[\]^_`{|}~`.
	// +kubebuilder:validation:Optional
	SymbolCharset *string `json:"symbolCharset,omitempty" tf:"symbol_charset,omitempty"`

	// (Number) Defaults to 2.
	// Defaults to `2`.
	// +kubebuilder:validation:Optional
	ZxcvbnScoreThreshold *float64 `json:"zxcvbnScoreThreshold,omitempty" tf:"zxcvbn_score_threshold,omitempty"`
}

// PasswordSpec defines the desired state of Password
type PasswordSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PasswordParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PasswordInitParameters `json:"initProvider,omitempty"`
}

// PasswordStatus defines the observed state of Password.
type PasswordStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PasswordObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Password is the Schema for the Passwords API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type Password struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.errorMessage) || (has(self.initProvider) && has(self.initProvider.errorMessage))",message="spec.forProvider.errorMessage is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   PasswordSpec   `json:"spec"`
	Status PasswordStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PasswordList contains a list of Passwords
type PasswordList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Password `json:"items"`
}

// Repository type metadata.
var (
	Password_Kind             = "Password"
	Password_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Password_Kind}.String()
	Password_KindAPIVersion   = Password_Kind + "." + CRDGroupVersion.String()
	Password_GroupVersionKind = CRDGroupVersion.WithKind(Password_Kind)
)

func init() {
	SchemeBuilder.Register(&Password{}, &PasswordList{})
}
