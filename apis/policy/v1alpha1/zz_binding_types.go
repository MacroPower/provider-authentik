/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BindingInitParameters struct {

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) UUID of the group
	// UUID of the group
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (Number)
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// (String) UUID of the policy
	// UUID of the policy
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// (String) ID of the object this binding should apply to
	// ID of the object this binding should apply to
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// (Number) Defaults to 30.
	// Defaults to `30`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// (Number) PK of the user
	// PK of the user
	User *float64 `json:"user,omitempty" tf:"user,omitempty"`
}

type BindingObservation struct {

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) UUID of the group
	// UUID of the group
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (Number)
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// (String) UUID of the policy
	// UUID of the policy
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// (String) ID of the object this binding should apply to
	// ID of the object this binding should apply to
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// (Number) Defaults to 30.
	// Defaults to `30`.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// (Number) PK of the user
	// PK of the user
	User *float64 `json:"user,omitempty" tf:"user,omitempty"`
}

type BindingParameters struct {

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String) UUID of the group
	// UUID of the group
	// +kubebuilder:validation:Optional
	Group *string `json:"group,omitempty" tf:"group,omitempty"`

	// (Boolean) Defaults to false.
	// Defaults to `false`.
	// +kubebuilder:validation:Optional
	Negate *bool `json:"negate,omitempty" tf:"negate,omitempty"`

	// (Number)
	// +kubebuilder:validation:Optional
	Order *float64 `json:"order,omitempty" tf:"order,omitempty"`

	// (String) UUID of the policy
	// UUID of the policy
	// +kubebuilder:validation:Optional
	Policy *string `json:"policy,omitempty" tf:"policy,omitempty"`

	// (String) ID of the object this binding should apply to
	// ID of the object this binding should apply to
	// +kubebuilder:validation:Optional
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// (Number) Defaults to 30.
	// Defaults to `30`.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// (Number) PK of the user
	// PK of the user
	// +kubebuilder:validation:Optional
	User *float64 `json:"user,omitempty" tf:"user,omitempty"`
}

// BindingSpec defines the desired state of Binding
type BindingSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BindingParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BindingInitParameters `json:"initProvider,omitempty"`
}

// BindingStatus defines the observed state of Binding.
type BindingStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BindingObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Binding is the Schema for the Bindings API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type Binding struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.order) || (has(self.initProvider) && has(self.initProvider.order))",message="spec.forProvider.order is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.target) || (has(self.initProvider) && has(self.initProvider.target))",message="spec.forProvider.target is a required parameter"
	Spec   BindingSpec   `json:"spec"`
	Status BindingStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BindingList contains a list of Bindings
type BindingList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Binding `json:"items"`
}

// Repository type metadata.
var (
	Binding_Kind             = "Binding"
	Binding_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Binding_Kind}.String()
	Binding_KindAPIVersion   = Binding_Kind + "." + CRDGroupVersion.String()
	Binding_GroupVersionKind = CRDGroupVersion.WithKind(Binding_Kind)
)

func init() {
	SchemeBuilder.Register(&Binding{}, &BindingList{})
}
