//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Group) DeepCopyInto(out *Group) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Group.
func (in *Group) DeepCopy() *Group {
	if in == nil {
		return nil
	}
	out := new(Group)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Group) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupInitParameters) DeepCopyInto(out *GroupInitParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.IsSuperuser != nil {
		in, out := &in.IsSuperuser, &out.IsSuperuser
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupInitParameters.
func (in *GroupInitParameters) DeepCopy() *GroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupList) DeepCopyInto(out *GroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Group, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupList.
func (in *GroupList) DeepCopy() *GroupList {
	if in == nil {
		return nil
	}
	out := new(GroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupObservation) DeepCopyInto(out *GroupObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsSuperuser != nil {
		in, out := &in.IsSuperuser, &out.IsSuperuser
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupObservation.
func (in *GroupObservation) DeepCopy() *GroupObservation {
	if in == nil {
		return nil
	}
	out := new(GroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupParameters) DeepCopyInto(out *GroupParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.IsSuperuser != nil {
		in, out := &in.IsSuperuser, &out.IsSuperuser
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parent != nil {
		in, out := &in.Parent, &out.Parent
		*out = new(string)
		**out = **in
	}
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.UsersRefs != nil {
		in, out := &in.UsersRefs, &out.UsersRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UsersSelector != nil {
		in, out := &in.UsersSelector, &out.UsersSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupParameters.
func (in *GroupParameters) DeepCopy() *GroupParameters {
	if in == nil {
		return nil
	}
	out := new(GroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupSpec) DeepCopyInto(out *GroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupSpec.
func (in *GroupSpec) DeepCopy() *GroupSpec {
	if in == nil {
		return nil
	}
	out := new(GroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupStatus) DeepCopyInto(out *GroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupStatus.
func (in *GroupStatus) DeepCopy() *GroupStatus {
	if in == nil {
		return nil
	}
	out := new(GroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAP) DeepCopyInto(out *SourceLDAP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAP.
func (in *SourceLDAP) DeepCopy() *SourceLDAP {
	if in == nil {
		return nil
	}
	out := new(SourceLDAP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceLDAP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAPInitParameters) DeepCopyInto(out *SourceLDAPInitParameters) {
	*out = *in
	if in.AdditionalGroupDn != nil {
		in, out := &in.AdditionalGroupDn, &out.AdditionalGroupDn
		*out = new(string)
		**out = **in
	}
	if in.AdditionalUserDn != nil {
		in, out := &in.AdditionalUserDn, &out.AdditionalUserDn
		*out = new(string)
		**out = **in
	}
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.BindCn != nil {
		in, out := &in.BindCn, &out.BindCn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupMembershipField != nil {
		in, out := &in.GroupMembershipField, &out.GroupMembershipField
		*out = new(string)
		**out = **in
	}
	if in.GroupObjectFilter != nil {
		in, out := &in.GroupObjectFilter, &out.GroupObjectFilter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObjectUniquenessField != nil {
		in, out := &in.ObjectUniquenessField, &out.ObjectUniquenessField
		*out = new(string)
		**out = **in
	}
	if in.PropertyMappings != nil {
		in, out := &in.PropertyMappings, &out.PropertyMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PropertyMappingsGroup != nil {
		in, out := &in.PropertyMappingsGroup, &out.PropertyMappingsGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerURI != nil {
		in, out := &in.ServerURI, &out.ServerURI
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.StartTLS != nil {
		in, out := &in.StartTLS, &out.StartTLS
		*out = new(bool)
		**out = **in
	}
	if in.SyncGroups != nil {
		in, out := &in.SyncGroups, &out.SyncGroups
		*out = new(bool)
		**out = **in
	}
	if in.SyncParentGroup != nil {
		in, out := &in.SyncParentGroup, &out.SyncParentGroup
		*out = new(string)
		**out = **in
	}
	if in.SyncUsers != nil {
		in, out := &in.SyncUsers, &out.SyncUsers
		*out = new(bool)
		**out = **in
	}
	if in.SyncUsersPassword != nil {
		in, out := &in.SyncUsersPassword, &out.SyncUsersPassword
		*out = new(bool)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserObjectFilter != nil {
		in, out := &in.UserObjectFilter, &out.UserObjectFilter
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAPInitParameters.
func (in *SourceLDAPInitParameters) DeepCopy() *SourceLDAPInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceLDAPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAPList) DeepCopyInto(out *SourceLDAPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceLDAP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAPList.
func (in *SourceLDAPList) DeepCopy() *SourceLDAPList {
	if in == nil {
		return nil
	}
	out := new(SourceLDAPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceLDAPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAPObservation) DeepCopyInto(out *SourceLDAPObservation) {
	*out = *in
	if in.AdditionalGroupDn != nil {
		in, out := &in.AdditionalGroupDn, &out.AdditionalGroupDn
		*out = new(string)
		**out = **in
	}
	if in.AdditionalUserDn != nil {
		in, out := &in.AdditionalUserDn, &out.AdditionalUserDn
		*out = new(string)
		**out = **in
	}
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.BindCn != nil {
		in, out := &in.BindCn, &out.BindCn
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupMembershipField != nil {
		in, out := &in.GroupMembershipField, &out.GroupMembershipField
		*out = new(string)
		**out = **in
	}
	if in.GroupObjectFilter != nil {
		in, out := &in.GroupObjectFilter, &out.GroupObjectFilter
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObjectUniquenessField != nil {
		in, out := &in.ObjectUniquenessField, &out.ObjectUniquenessField
		*out = new(string)
		**out = **in
	}
	if in.PropertyMappings != nil {
		in, out := &in.PropertyMappings, &out.PropertyMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PropertyMappingsGroup != nil {
		in, out := &in.PropertyMappingsGroup, &out.PropertyMappingsGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerURI != nil {
		in, out := &in.ServerURI, &out.ServerURI
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.StartTLS != nil {
		in, out := &in.StartTLS, &out.StartTLS
		*out = new(bool)
		**out = **in
	}
	if in.SyncGroups != nil {
		in, out := &in.SyncGroups, &out.SyncGroups
		*out = new(bool)
		**out = **in
	}
	if in.SyncParentGroup != nil {
		in, out := &in.SyncParentGroup, &out.SyncParentGroup
		*out = new(string)
		**out = **in
	}
	if in.SyncUsers != nil {
		in, out := &in.SyncUsers, &out.SyncUsers
		*out = new(bool)
		**out = **in
	}
	if in.SyncUsersPassword != nil {
		in, out := &in.SyncUsersPassword, &out.SyncUsersPassword
		*out = new(bool)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserObjectFilter != nil {
		in, out := &in.UserObjectFilter, &out.UserObjectFilter
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAPObservation.
func (in *SourceLDAPObservation) DeepCopy() *SourceLDAPObservation {
	if in == nil {
		return nil
	}
	out := new(SourceLDAPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAPParameters) DeepCopyInto(out *SourceLDAPParameters) {
	*out = *in
	if in.AdditionalGroupDn != nil {
		in, out := &in.AdditionalGroupDn, &out.AdditionalGroupDn
		*out = new(string)
		**out = **in
	}
	if in.AdditionalUserDn != nil {
		in, out := &in.AdditionalUserDn, &out.AdditionalUserDn
		*out = new(string)
		**out = **in
	}
	if in.BaseDn != nil {
		in, out := &in.BaseDn, &out.BaseDn
		*out = new(string)
		**out = **in
	}
	if in.BindCn != nil {
		in, out := &in.BindCn, &out.BindCn
		*out = new(string)
		**out = **in
	}
	out.BindPasswordSecretRef = in.BindPasswordSecretRef
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GroupMembershipField != nil {
		in, out := &in.GroupMembershipField, &out.GroupMembershipField
		*out = new(string)
		**out = **in
	}
	if in.GroupObjectFilter != nil {
		in, out := &in.GroupObjectFilter, &out.GroupObjectFilter
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ObjectUniquenessField != nil {
		in, out := &in.ObjectUniquenessField, &out.ObjectUniquenessField
		*out = new(string)
		**out = **in
	}
	if in.PropertyMappings != nil {
		in, out := &in.PropertyMappings, &out.PropertyMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PropertyMappingsGroup != nil {
		in, out := &in.PropertyMappingsGroup, &out.PropertyMappingsGroup
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerURI != nil {
		in, out := &in.ServerURI, &out.ServerURI
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.StartTLS != nil {
		in, out := &in.StartTLS, &out.StartTLS
		*out = new(bool)
		**out = **in
	}
	if in.SyncGroups != nil {
		in, out := &in.SyncGroups, &out.SyncGroups
		*out = new(bool)
		**out = **in
	}
	if in.SyncParentGroup != nil {
		in, out := &in.SyncParentGroup, &out.SyncParentGroup
		*out = new(string)
		**out = **in
	}
	if in.SyncUsers != nil {
		in, out := &in.SyncUsers, &out.SyncUsers
		*out = new(bool)
		**out = **in
	}
	if in.SyncUsersPassword != nil {
		in, out := &in.SyncUsersPassword, &out.SyncUsersPassword
		*out = new(bool)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserObjectFilter != nil {
		in, out := &in.UserObjectFilter, &out.UserObjectFilter
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAPParameters.
func (in *SourceLDAPParameters) DeepCopy() *SourceLDAPParameters {
	if in == nil {
		return nil
	}
	out := new(SourceLDAPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAPSpec) DeepCopyInto(out *SourceLDAPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAPSpec.
func (in *SourceLDAPSpec) DeepCopy() *SourceLDAPSpec {
	if in == nil {
		return nil
	}
	out := new(SourceLDAPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceLDAPStatus) DeepCopyInto(out *SourceLDAPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceLDAPStatus.
func (in *SourceLDAPStatus) DeepCopy() *SourceLDAPStatus {
	if in == nil {
		return nil
	}
	out := new(SourceLDAPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuth) DeepCopyInto(out *SourceOAuth) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuth.
func (in *SourceOAuth) DeepCopy() *SourceOAuth {
	if in == nil {
		return nil
	}
	out := new(SourceOAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceOAuth) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuthInitParameters) DeepCopyInto(out *SourceOAuthInitParameters) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.AdditionalScopes != nil {
		in, out := &in.AdditionalScopes, &out.AdditionalScopes
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationURL != nil {
		in, out := &in.AuthorizationURL, &out.AuthorizationURL
		*out = new(string)
		**out = **in
	}
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OidcJwks != nil {
		in, out := &in.OidcJwks, &out.OidcJwks
		*out = new(string)
		**out = **in
	}
	if in.OidcJwksURL != nil {
		in, out := &in.OidcJwksURL, &out.OidcJwksURL
		*out = new(string)
		**out = **in
	}
	if in.OidcWellKnownURL != nil {
		in, out := &in.OidcWellKnownURL, &out.OidcWellKnownURL
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.ProfileURL != nil {
		in, out := &in.ProfileURL, &out.ProfileURL
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.RequestTokenURL != nil {
		in, out := &in.RequestTokenURL, &out.RequestTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuthInitParameters.
func (in *SourceOAuthInitParameters) DeepCopy() *SourceOAuthInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceOAuthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuthList) DeepCopyInto(out *SourceOAuthList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceOAuth, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuthList.
func (in *SourceOAuthList) DeepCopy() *SourceOAuthList {
	if in == nil {
		return nil
	}
	out := new(SourceOAuthList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceOAuthList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuthObservation) DeepCopyInto(out *SourceOAuthObservation) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.AdditionalScopes != nil {
		in, out := &in.AdditionalScopes, &out.AdditionalScopes
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationURL != nil {
		in, out := &in.AuthorizationURL, &out.AuthorizationURL
		*out = new(string)
		**out = **in
	}
	if in.CallbackURI != nil {
		in, out := &in.CallbackURI, &out.CallbackURI
		*out = new(string)
		**out = **in
	}
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnrollmentFlow != nil {
		in, out := &in.EnrollmentFlow, &out.EnrollmentFlow
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OidcJwks != nil {
		in, out := &in.OidcJwks, &out.OidcJwks
		*out = new(string)
		**out = **in
	}
	if in.OidcJwksURL != nil {
		in, out := &in.OidcJwksURL, &out.OidcJwksURL
		*out = new(string)
		**out = **in
	}
	if in.OidcWellKnownURL != nil {
		in, out := &in.OidcWellKnownURL, &out.OidcWellKnownURL
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.ProfileURL != nil {
		in, out := &in.ProfileURL, &out.ProfileURL
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.RequestTokenURL != nil {
		in, out := &in.RequestTokenURL, &out.RequestTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuthObservation.
func (in *SourceOAuthObservation) DeepCopy() *SourceOAuthObservation {
	if in == nil {
		return nil
	}
	out := new(SourceOAuthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuthParameters) DeepCopyInto(out *SourceOAuthParameters) {
	*out = *in
	if in.AccessTokenURL != nil {
		in, out := &in.AccessTokenURL, &out.AccessTokenURL
		*out = new(string)
		**out = **in
	}
	if in.AdditionalScopes != nil {
		in, out := &in.AdditionalScopes, &out.AdditionalScopes
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlowRef != nil {
		in, out := &in.AuthenticationFlowRef, &out.AuthenticationFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthenticationFlowSelector != nil {
		in, out := &in.AuthenticationFlowSelector, &out.AuthenticationFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizationURL != nil {
		in, out := &in.AuthorizationURL, &out.AuthorizationURL
		*out = new(string)
		**out = **in
	}
	if in.ConsumerKey != nil {
		in, out := &in.ConsumerKey, &out.ConsumerKey
		*out = new(string)
		**out = **in
	}
	out.ConsumerSecretSecretRef = in.ConsumerSecretSecretRef
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnrollmentFlow != nil {
		in, out := &in.EnrollmentFlow, &out.EnrollmentFlow
		*out = new(string)
		**out = **in
	}
	if in.EnrollmentFlowRef != nil {
		in, out := &in.EnrollmentFlowRef, &out.EnrollmentFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnrollmentFlowSelector != nil {
		in, out := &in.EnrollmentFlowSelector, &out.EnrollmentFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OidcJwks != nil {
		in, out := &in.OidcJwks, &out.OidcJwks
		*out = new(string)
		**out = **in
	}
	if in.OidcJwksURL != nil {
		in, out := &in.OidcJwksURL, &out.OidcJwksURL
		*out = new(string)
		**out = **in
	}
	if in.OidcWellKnownURL != nil {
		in, out := &in.OidcWellKnownURL, &out.OidcWellKnownURL
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.ProfileURL != nil {
		in, out := &in.ProfileURL, &out.ProfileURL
		*out = new(string)
		**out = **in
	}
	if in.ProviderType != nil {
		in, out := &in.ProviderType, &out.ProviderType
		*out = new(string)
		**out = **in
	}
	if in.RequestTokenURL != nil {
		in, out := &in.RequestTokenURL, &out.RequestTokenURL
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuthParameters.
func (in *SourceOAuthParameters) DeepCopy() *SourceOAuthParameters {
	if in == nil {
		return nil
	}
	out := new(SourceOAuthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuthSpec) DeepCopyInto(out *SourceOAuthSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuthSpec.
func (in *SourceOAuthSpec) DeepCopy() *SourceOAuthSpec {
	if in == nil {
		return nil
	}
	out := new(SourceOAuthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceOAuthStatus) DeepCopyInto(out *SourceOAuthStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceOAuthStatus.
func (in *SourceOAuthStatus) DeepCopy() *SourceOAuthStatus {
	if in == nil {
		return nil
	}
	out := new(SourceOAuthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlex) DeepCopyInto(out *SourcePlex) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlex.
func (in *SourcePlex) DeepCopy() *SourcePlex {
	if in == nil {
		return nil
	}
	out := new(SourcePlex)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourcePlex) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlexInitParameters) DeepCopyInto(out *SourcePlexInitParameters) {
	*out = *in
	if in.AllowFriends != nil {
		in, out := &in.AllowFriends, &out.AllowFriends
		*out = new(bool)
		**out = **in
	}
	if in.AllowedServers != nil {
		in, out := &in.AllowedServers, &out.AllowedServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlexInitParameters.
func (in *SourcePlexInitParameters) DeepCopy() *SourcePlexInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePlexInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlexList) DeepCopyInto(out *SourcePlexList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourcePlex, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlexList.
func (in *SourcePlexList) DeepCopy() *SourcePlexList {
	if in == nil {
		return nil
	}
	out := new(SourcePlexList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourcePlexList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlexObservation) DeepCopyInto(out *SourcePlexObservation) {
	*out = *in
	if in.AllowFriends != nil {
		in, out := &in.AllowFriends, &out.AllowFriends
		*out = new(bool)
		**out = **in
	}
	if in.AllowedServers != nil {
		in, out := &in.AllowedServers, &out.AllowedServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnrollmentFlow != nil {
		in, out := &in.EnrollmentFlow, &out.EnrollmentFlow
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlexObservation.
func (in *SourcePlexObservation) DeepCopy() *SourcePlexObservation {
	if in == nil {
		return nil
	}
	out := new(SourcePlexObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlexParameters) DeepCopyInto(out *SourcePlexParameters) {
	*out = *in
	if in.AllowFriends != nil {
		in, out := &in.AllowFriends, &out.AllowFriends
		*out = new(bool)
		**out = **in
	}
	if in.AllowedServers != nil {
		in, out := &in.AllowedServers, &out.AllowedServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlowRef != nil {
		in, out := &in.AuthenticationFlowRef, &out.AuthenticationFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthenticationFlowSelector != nil {
		in, out := &in.AuthenticationFlowSelector, &out.AuthenticationFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnrollmentFlow != nil {
		in, out := &in.EnrollmentFlow, &out.EnrollmentFlow
		*out = new(string)
		**out = **in
	}
	if in.EnrollmentFlowRef != nil {
		in, out := &in.EnrollmentFlowRef, &out.EnrollmentFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnrollmentFlowSelector != nil {
		in, out := &in.EnrollmentFlowSelector, &out.EnrollmentFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	out.PlexTokenSecretRef = in.PlexTokenSecretRef
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlexParameters.
func (in *SourcePlexParameters) DeepCopy() *SourcePlexParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePlexParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlexSpec) DeepCopyInto(out *SourcePlexSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlexSpec.
func (in *SourcePlexSpec) DeepCopy() *SourcePlexSpec {
	if in == nil {
		return nil
	}
	out := new(SourcePlexSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePlexStatus) DeepCopyInto(out *SourcePlexStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePlexStatus.
func (in *SourcePlexStatus) DeepCopy() *SourcePlexStatus {
	if in == nil {
		return nil
	}
	out := new(SourcePlexStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAML) DeepCopyInto(out *SourceSAML) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAML.
func (in *SourceSAML) DeepCopy() *SourceSAML {
	if in == nil {
		return nil
	}
	out := new(SourceSAML)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceSAML) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAMLInitParameters) DeepCopyInto(out *SourceSAMLInitParameters) {
	*out = *in
	if in.AllowIdpInitiated != nil {
		in, out := &in.AllowIdpInitiated, &out.AllowIdpInitiated
		*out = new(bool)
		**out = **in
	}
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameIDPolicy != nil {
		in, out := &in.NameIDPolicy, &out.NameIDPolicy
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.SLOURL != nil {
		in, out := &in.SLOURL, &out.SLOURL
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningKp != nil {
		in, out := &in.SigningKp, &out.SigningKp
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.SsoURL != nil {
		in, out := &in.SsoURL, &out.SsoURL
		*out = new(string)
		**out = **in
	}
	if in.TemporaryUserDeleteAfter != nil {
		in, out := &in.TemporaryUserDeleteAfter, &out.TemporaryUserDeleteAfter
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAMLInitParameters.
func (in *SourceSAMLInitParameters) DeepCopy() *SourceSAMLInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceSAMLInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAMLList) DeepCopyInto(out *SourceSAMLList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SourceSAML, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAMLList.
func (in *SourceSAMLList) DeepCopy() *SourceSAMLList {
	if in == nil {
		return nil
	}
	out := new(SourceSAMLList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SourceSAMLList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAMLObservation) DeepCopyInto(out *SourceSAMLObservation) {
	*out = *in
	if in.AllowIdpInitiated != nil {
		in, out := &in.AllowIdpInitiated, &out.AllowIdpInitiated
		*out = new(bool)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnrollmentFlow != nil {
		in, out := &in.EnrollmentFlow, &out.EnrollmentFlow
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameIDPolicy != nil {
		in, out := &in.NameIDPolicy, &out.NameIDPolicy
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.PreAuthenticationFlow != nil {
		in, out := &in.PreAuthenticationFlow, &out.PreAuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.SLOURL != nil {
		in, out := &in.SLOURL, &out.SLOURL
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningKp != nil {
		in, out := &in.SigningKp, &out.SigningKp
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.SsoURL != nil {
		in, out := &in.SsoURL, &out.SsoURL
		*out = new(string)
		**out = **in
	}
	if in.TemporaryUserDeleteAfter != nil {
		in, out := &in.TemporaryUserDeleteAfter, &out.TemporaryUserDeleteAfter
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAMLObservation.
func (in *SourceSAMLObservation) DeepCopy() *SourceSAMLObservation {
	if in == nil {
		return nil
	}
	out := new(SourceSAMLObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAMLParameters) DeepCopyInto(out *SourceSAMLParameters) {
	*out = *in
	if in.AllowIdpInitiated != nil {
		in, out := &in.AllowIdpInitiated, &out.AllowIdpInitiated
		*out = new(bool)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlowRef != nil {
		in, out := &in.AuthenticationFlowRef, &out.AuthenticationFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthenticationFlowSelector != nil {
		in, out := &in.AuthenticationFlowSelector, &out.AuthenticationFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.BindingType != nil {
		in, out := &in.BindingType, &out.BindingType
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.EnrollmentFlow != nil {
		in, out := &in.EnrollmentFlow, &out.EnrollmentFlow
		*out = new(string)
		**out = **in
	}
	if in.EnrollmentFlowRef != nil {
		in, out := &in.EnrollmentFlowRef, &out.EnrollmentFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EnrollmentFlowSelector != nil {
		in, out := &in.EnrollmentFlowSelector, &out.EnrollmentFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Issuer != nil {
		in, out := &in.Issuer, &out.Issuer
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NameIDPolicy != nil {
		in, out := &in.NameIDPolicy, &out.NameIDPolicy
		*out = new(string)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.PreAuthenticationFlow != nil {
		in, out := &in.PreAuthenticationFlow, &out.PreAuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.PreAuthenticationFlowRef != nil {
		in, out := &in.PreAuthenticationFlowRef, &out.PreAuthenticationFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PreAuthenticationFlowSelector != nil {
		in, out := &in.PreAuthenticationFlowSelector, &out.PreAuthenticationFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SLOURL != nil {
		in, out := &in.SLOURL, &out.SLOURL
		*out = new(string)
		**out = **in
	}
	if in.SignatureAlgorithm != nil {
		in, out := &in.SignatureAlgorithm, &out.SignatureAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.SigningKp != nil {
		in, out := &in.SigningKp, &out.SigningKp
		*out = new(string)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.SsoURL != nil {
		in, out := &in.SsoURL, &out.SsoURL
		*out = new(string)
		**out = **in
	}
	if in.TemporaryUserDeleteAfter != nil {
		in, out := &in.TemporaryUserDeleteAfter, &out.TemporaryUserDeleteAfter
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
	if in.UserMatchingMode != nil {
		in, out := &in.UserMatchingMode, &out.UserMatchingMode
		*out = new(string)
		**out = **in
	}
	if in.UserPathTemplate != nil {
		in, out := &in.UserPathTemplate, &out.UserPathTemplate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAMLParameters.
func (in *SourceSAMLParameters) DeepCopy() *SourceSAMLParameters {
	if in == nil {
		return nil
	}
	out := new(SourceSAMLParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAMLSpec) DeepCopyInto(out *SourceSAMLSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAMLSpec.
func (in *SourceSAMLSpec) DeepCopy() *SourceSAMLSpec {
	if in == nil {
		return nil
	}
	out := new(SourceSAMLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceSAMLStatus) DeepCopyInto(out *SourceSAMLStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceSAMLStatus.
func (in *SourceSAMLStatus) DeepCopy() *SourceSAMLStatus {
	if in == nil {
		return nil
	}
	out := new(SourceSAMLStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *User) DeepCopyInto(out *User) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new User.
func (in *User) DeepCopy() *User {
	if in == nil {
		return nil
	}
	out := new(User)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *User) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserInitParameters) DeepCopyInto(out *UserInitParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserInitParameters.
func (in *UserInitParameters) DeepCopy() *UserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserList) DeepCopyInto(out *UserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]User, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserList.
func (in *UserList) DeepCopy() *UserList {
	if in == nil {
		return nil
	}
	out := new(UserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserObservation) DeepCopyInto(out *UserObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserObservation.
func (in *UserObservation) DeepCopy() *UserObservation {
	if in == nil {
		return nil
	}
	out := new(UserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserParameters) DeepCopyInto(out *UserParameters) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = new(string)
		**out = **in
	}
	if in.Email != nil {
		in, out := &in.Email, &out.Email
		*out = new(string)
		**out = **in
	}
	if in.Groups != nil {
		in, out := &in.Groups, &out.Groups
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Username != nil {
		in, out := &in.Username, &out.Username
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserParameters.
func (in *UserParameters) DeepCopy() *UserParameters {
	if in == nil {
		return nil
	}
	out := new(UserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserSpec) DeepCopyInto(out *UserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserSpec.
func (in *UserSpec) DeepCopy() *UserSpec {
	if in == nil {
		return nil
	}
	out := new(UserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserStatus) DeepCopyInto(out *UserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserStatus.
func (in *UserStatus) DeepCopy() *UserStatus {
	if in == nil {
		return nil
	}
	out := new(UserStatus)
	in.DeepCopyInto(out)
	return out
}
