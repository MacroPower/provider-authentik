/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SourceOAuthInitParameters struct {

	// (String) Only required for OAuth1.
	// Only required for OAuth1.
	AccessTokenURL *string `json:"accessTokenUrl,omitempty" tf:"access_token_url,omitempty"`

	// (String)
	AdditionalScopes *string `json:"additionalScopes,omitempty" tf:"additional_scopes,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	AuthorizationURL *string `json:"authorizationUrl,omitempty" tf:"authorization_url,omitempty"`

	// (String)
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
	// Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
	OidcJwks *string `json:"oidcJwks,omitempty" tf:"oidc_jwks,omitempty"`

	// (String) Automatically configure JWKS if not specified by oidc_well_known_url.
	// Automatically configure JWKS if not specified by `oidc_well_known_url`.
	OidcJwksURL *string `json:"oidcJwksUrl,omitempty" tf:"oidc_jwks_url,omitempty"`

	// known endpoint. URL is taken as is, and should end with .well-known/openid-configuration.
	// Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.
	OidcWellKnownURL *string `json:"oidcWellKnownUrl,omitempty" tf:"oidc_well_known_url,omitempty"`

	// (String) Defaults to any.
	// Defaults to `any`.
	PolicyEngineMode *string `json:"policyEngineMode,omitempty" tf:"policy_engine_mode,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	ProfileURL *string `json:"profileUrl,omitempty" tf:"profile_url,omitempty"`

	// (String)
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	RequestTokenURL *string `json:"requestTokenUrl,omitempty" tf:"request_token_url,omitempty"`

	// (String)
	Slug *string `json:"slug,omitempty" tf:"slug,omitempty"`

	// (String) Generated.
	// Generated.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// (String) Defaults to identifier.
	// Defaults to `identifier`.
	UserMatchingMode *string `json:"userMatchingMode,omitempty" tf:"user_matching_mode,omitempty"`

	// (String) Defaults to goauthentik.io/sources/%(slug)s.
	// Defaults to `goauthentik.io/sources/%(slug)s`.
	UserPathTemplate *string `json:"userPathTemplate,omitempty" tf:"user_path_template,omitempty"`
}

type SourceOAuthObservation struct {

	// (String) Only required for OAuth1.
	// Only required for OAuth1.
	AccessTokenURL *string `json:"accessTokenUrl,omitempty" tf:"access_token_url,omitempty"`

	// (String)
	AdditionalScopes *string `json:"additionalScopes,omitempty" tf:"additional_scopes,omitempty"`

	// (String)
	AuthenticationFlow *string `json:"authenticationFlow,omitempty" tf:"authentication_flow,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	AuthorizationURL *string `json:"authorizationUrl,omitempty" tf:"authorization_url,omitempty"`

	// (String) Generated.
	// Generated.
	CallbackURI *string `json:"callbackUri,omitempty" tf:"callback_uri,omitempty"`

	// (String)
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	EnrollmentFlow *string `json:"enrollmentFlow,omitempty" tf:"enrollment_flow,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String)
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
	// Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
	OidcJwks *string `json:"oidcJwks,omitempty" tf:"oidc_jwks,omitempty"`

	// (String) Automatically configure JWKS if not specified by oidc_well_known_url.
	// Automatically configure JWKS if not specified by `oidc_well_known_url`.
	OidcJwksURL *string `json:"oidcJwksUrl,omitempty" tf:"oidc_jwks_url,omitempty"`

	// known endpoint. URL is taken as is, and should end with .well-known/openid-configuration.
	// Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.
	OidcWellKnownURL *string `json:"oidcWellKnownUrl,omitempty" tf:"oidc_well_known_url,omitempty"`

	// (String) Defaults to any.
	// Defaults to `any`.
	PolicyEngineMode *string `json:"policyEngineMode,omitempty" tf:"policy_engine_mode,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	ProfileURL *string `json:"profileUrl,omitempty" tf:"profile_url,omitempty"`

	// (String)
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	RequestTokenURL *string `json:"requestTokenUrl,omitempty" tf:"request_token_url,omitempty"`

	// (String)
	Slug *string `json:"slug,omitempty" tf:"slug,omitempty"`

	// (String) Generated.
	// Generated.
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// (String) Defaults to identifier.
	// Defaults to `identifier`.
	UserMatchingMode *string `json:"userMatchingMode,omitempty" tf:"user_matching_mode,omitempty"`

	// (String) Defaults to goauthentik.io/sources/%(slug)s.
	// Defaults to `goauthentik.io/sources/%(slug)s`.
	UserPathTemplate *string `json:"userPathTemplate,omitempty" tf:"user_path_template,omitempty"`
}

type SourceOAuthParameters struct {

	// (String) Only required for OAuth1.
	// Only required for OAuth1.
	// +kubebuilder:validation:Optional
	AccessTokenURL *string `json:"accessTokenUrl,omitempty" tf:"access_token_url,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	AdditionalScopes *string `json:"additionalScopes,omitempty" tf:"additional_scopes,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=github.com/MacroPower/provider-authentik/apis/authentik/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("uuid",true)
	// +kubebuilder:validation:Optional
	AuthenticationFlow *string `json:"authenticationFlow,omitempty" tf:"authentication_flow,omitempty"`

	// Reference to a Flow in authentik to populate authenticationFlow.
	// +kubebuilder:validation:Optional
	AuthenticationFlowRef *v1.Reference `json:"authenticationFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authentik to populate authenticationFlow.
	// +kubebuilder:validation:Optional
	AuthenticationFlowSelector *v1.Selector `json:"authenticationFlowSelector,omitempty" tf:"-"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	// +kubebuilder:validation:Optional
	AuthorizationURL *string `json:"authorizationUrl,omitempty" tf:"authorization_url,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	ConsumerKey *string `json:"consumerKey,omitempty" tf:"consumer_key,omitempty"`

	// (String, Sensitive)
	// +kubebuilder:validation:Optional
	ConsumerSecretSecretRef v1.SecretKeySelector `json:"consumerSecretSecretRef" tf:"-"`

	// (Boolean) Defaults to true.
	// Defaults to `true`.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// (String)
	// +crossplane:generate:reference:type=github.com/MacroPower/provider-authentik/apis/authentik/v1alpha1.Flow
	// +crossplane:generate:reference:extractor=github.com/upbound/upjet/pkg/resource.ExtractParamPath("uuid",true)
	// +kubebuilder:validation:Optional
	EnrollmentFlow *string `json:"enrollmentFlow,omitempty" tf:"enrollment_flow,omitempty"`

	// Reference to a Flow in authentik to populate enrollmentFlow.
	// +kubebuilder:validation:Optional
	EnrollmentFlowRef *v1.Reference `json:"enrollmentFlowRef,omitempty" tf:"-"`

	// Selector for a Flow in authentik to populate enrollmentFlow.
	// +kubebuilder:validation:Optional
	EnrollmentFlowSelector *v1.Selector `json:"enrollmentFlowSelector,omitempty" tf:"-"`

	// (String)
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
	// Manually configure JWKS keys for use with machine-to-machine authentication. JSON format expected. Use jsonencode() to pass objects. Generated.
	// +kubebuilder:validation:Optional
	OidcJwks *string `json:"oidcJwks,omitempty" tf:"oidc_jwks,omitempty"`

	// (String) Automatically configure JWKS if not specified by oidc_well_known_url.
	// Automatically configure JWKS if not specified by `oidc_well_known_url`.
	// +kubebuilder:validation:Optional
	OidcJwksURL *string `json:"oidcJwksUrl,omitempty" tf:"oidc_jwks_url,omitempty"`

	// known endpoint. URL is taken as is, and should end with .well-known/openid-configuration.
	// Automatically configure source from OIDC well-known endpoint. URL is taken as is, and should end with `.well-known/openid-configuration`.
	// +kubebuilder:validation:Optional
	OidcWellKnownURL *string `json:"oidcWellKnownUrl,omitempty" tf:"oidc_well_known_url,omitempty"`

	// (String) Defaults to any.
	// Defaults to `any`.
	// +kubebuilder:validation:Optional
	PolicyEngineMode *string `json:"policyEngineMode,omitempty" tf:"policy_engine_mode,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	// +kubebuilder:validation:Optional
	ProfileURL *string `json:"profileUrl,omitempty" tf:"profile_url,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	ProviderType *string `json:"providerType,omitempty" tf:"provider_type,omitempty"`

	// (String) Manually configure OAuth2 URLs when oidc_well_known_url is not set.
	// Manually configure OAuth2 URLs when `oidc_well_known_url` is not set.
	// +kubebuilder:validation:Optional
	RequestTokenURL *string `json:"requestTokenUrl,omitempty" tf:"request_token_url,omitempty"`

	// (String)
	// +kubebuilder:validation:Optional
	Slug *string `json:"slug,omitempty" tf:"slug,omitempty"`

	// (String) Generated.
	// Generated.
	// +kubebuilder:validation:Optional
	UUID *string `json:"uuid,omitempty" tf:"uuid,omitempty"`

	// (String) Defaults to identifier.
	// Defaults to `identifier`.
	// +kubebuilder:validation:Optional
	UserMatchingMode *string `json:"userMatchingMode,omitempty" tf:"user_matching_mode,omitempty"`

	// (String) Defaults to goauthentik.io/sources/%(slug)s.
	// Defaults to `goauthentik.io/sources/%(slug)s`.
	// +kubebuilder:validation:Optional
	UserPathTemplate *string `json:"userPathTemplate,omitempty" tf:"user_path_template,omitempty"`
}

// SourceOAuthSpec defines the desired state of SourceOAuth
type SourceOAuthSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SourceOAuthParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SourceOAuthInitParameters `json:"initProvider,omitempty"`
}

// SourceOAuthStatus defines the observed state of SourceOAuth.
type SourceOAuthStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SourceOAuthObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// SourceOAuth is the Schema for the SourceOAuths API.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,authentik}
type SourceOAuth struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.consumerKey) || (has(self.initProvider) && has(self.initProvider.consumerKey))",message="spec.forProvider.consumerKey is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.consumerSecretSecretRef)",message="spec.forProvider.consumerSecretSecretRef is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.providerType) || (has(self.initProvider) && has(self.initProvider.providerType))",message="spec.forProvider.providerType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.slug) || (has(self.initProvider) && has(self.initProvider.slug))",message="spec.forProvider.slug is a required parameter"
	Spec   SourceOAuthSpec   `json:"spec"`
	Status SourceOAuthStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SourceOAuthList contains a list of SourceOAuths
type SourceOAuthList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SourceOAuth `json:"items"`
}

// Repository type metadata.
var (
	SourceOAuth_Kind             = "SourceOAuth"
	SourceOAuth_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SourceOAuth_Kind}.String()
	SourceOAuth_KindAPIVersion   = SourceOAuth_Kind + "." + CRDGroupVersion.String()
	SourceOAuth_GroupVersionKind = CRDGroupVersion.WithKind(SourceOAuth_Kind)
)

func init() {
	SchemeBuilder.Register(&SourceOAuth{}, &SourceOAuthList{})
}
