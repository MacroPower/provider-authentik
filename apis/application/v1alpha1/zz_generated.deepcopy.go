//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Application) DeepCopyInto(out *Application) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Application.
func (in *Application) DeepCopy() *Application {
	if in == nil {
		return nil
	}
	out := new(Application)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Application) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationInitParameters) DeepCopyInto(out *ApplicationInitParameters) {
	*out = *in
	if in.BackchannelProviders != nil {
		in, out := &in.BackchannelProviders, &out.BackchannelProviders
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.MetaDescription != nil {
		in, out := &in.MetaDescription, &out.MetaDescription
		*out = new(string)
		**out = **in
	}
	if in.MetaIcon != nil {
		in, out := &in.MetaIcon, &out.MetaIcon
		*out = new(string)
		**out = **in
	}
	if in.MetaLaunchURL != nil {
		in, out := &in.MetaLaunchURL, &out.MetaLaunchURL
		*out = new(string)
		**out = **in
	}
	if in.MetaPublisher != nil {
		in, out := &in.MetaPublisher, &out.MetaPublisher
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenInNewTab != nil {
		in, out := &in.OpenInNewTab, &out.OpenInNewTab
		*out = new(bool)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.ProtocolProvider != nil {
		in, out := &in.ProtocolProvider, &out.ProtocolProvider
		*out = new(float64)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationInitParameters.
func (in *ApplicationInitParameters) DeepCopy() *ApplicationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationList) DeepCopyInto(out *ApplicationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Application, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationList.
func (in *ApplicationList) DeepCopy() *ApplicationList {
	if in == nil {
		return nil
	}
	out := new(ApplicationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationObservation) DeepCopyInto(out *ApplicationObservation) {
	*out = *in
	if in.BackchannelProviders != nil {
		in, out := &in.BackchannelProviders, &out.BackchannelProviders
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MetaDescription != nil {
		in, out := &in.MetaDescription, &out.MetaDescription
		*out = new(string)
		**out = **in
	}
	if in.MetaIcon != nil {
		in, out := &in.MetaIcon, &out.MetaIcon
		*out = new(string)
		**out = **in
	}
	if in.MetaLaunchURL != nil {
		in, out := &in.MetaLaunchURL, &out.MetaLaunchURL
		*out = new(string)
		**out = **in
	}
	if in.MetaPublisher != nil {
		in, out := &in.MetaPublisher, &out.MetaPublisher
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenInNewTab != nil {
		in, out := &in.OpenInNewTab, &out.OpenInNewTab
		*out = new(bool)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.ProtocolProvider != nil {
		in, out := &in.ProtocolProvider, &out.ProtocolProvider
		*out = new(float64)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationObservation.
func (in *ApplicationObservation) DeepCopy() *ApplicationObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationParameters) DeepCopyInto(out *ApplicationParameters) {
	*out = *in
	if in.BackchannelProviders != nil {
		in, out := &in.BackchannelProviders, &out.BackchannelProviders
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Group != nil {
		in, out := &in.Group, &out.Group
		*out = new(string)
		**out = **in
	}
	if in.MetaDescription != nil {
		in, out := &in.MetaDescription, &out.MetaDescription
		*out = new(string)
		**out = **in
	}
	if in.MetaIcon != nil {
		in, out := &in.MetaIcon, &out.MetaIcon
		*out = new(string)
		**out = **in
	}
	if in.MetaLaunchURL != nil {
		in, out := &in.MetaLaunchURL, &out.MetaLaunchURL
		*out = new(string)
		**out = **in
	}
	if in.MetaPublisher != nil {
		in, out := &in.MetaPublisher, &out.MetaPublisher
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OpenInNewTab != nil {
		in, out := &in.OpenInNewTab, &out.OpenInNewTab
		*out = new(bool)
		**out = **in
	}
	if in.PolicyEngineMode != nil {
		in, out := &in.PolicyEngineMode, &out.PolicyEngineMode
		*out = new(string)
		**out = **in
	}
	if in.ProtocolProvider != nil {
		in, out := &in.ProtocolProvider, &out.ProtocolProvider
		*out = new(float64)
		**out = **in
	}
	if in.Slug != nil {
		in, out := &in.Slug, &out.Slug
		*out = new(string)
		**out = **in
	}
	if in.UUID != nil {
		in, out := &in.UUID, &out.UUID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationParameters.
func (in *ApplicationParameters) DeepCopy() *ApplicationParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSpec) DeepCopyInto(out *ApplicationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSpec.
func (in *ApplicationSpec) DeepCopy() *ApplicationSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationStatus) DeepCopyInto(out *ApplicationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationStatus.
func (in *ApplicationStatus) DeepCopy() *ApplicationStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2) DeepCopyInto(out *ProviderOAuth2) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2.
func (in *ProviderOAuth2) DeepCopy() *ProviderOAuth2 {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProviderOAuth2) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2InitParameters) DeepCopyInto(out *ProviderOAuth2InitParameters) {
	*out = *in
	if in.AccessCodeValidity != nil {
		in, out := &in.AccessCodeValidity, &out.AccessCodeValidity
		*out = new(string)
		**out = **in
	}
	if in.AccessTokenValidity != nil {
		in, out := &in.AccessTokenValidity, &out.AccessTokenValidity
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientType != nil {
		in, out := &in.ClientType, &out.ClientType
		*out = new(string)
		**out = **in
	}
	if in.IncludeClaimsInIDToken != nil {
		in, out := &in.IncludeClaimsInIDToken, &out.IncludeClaimsInIDToken
		*out = new(bool)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.JwksSources != nil {
		in, out := &in.JwksSources, &out.JwksSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyMappings != nil {
		in, out := &in.PropertyMappings, &out.PropertyMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshTokenValidity != nil {
		in, out := &in.RefreshTokenValidity, &out.RefreshTokenValidity
		*out = new(string)
		**out = **in
	}
	if in.SigningKey != nil {
		in, out := &in.SigningKey, &out.SigningKey
		*out = new(string)
		**out = **in
	}
	if in.SubMode != nil {
		in, out := &in.SubMode, &out.SubMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2InitParameters.
func (in *ProviderOAuth2InitParameters) DeepCopy() *ProviderOAuth2InitParameters {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2List) DeepCopyInto(out *ProviderOAuth2List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ProviderOAuth2, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2List.
func (in *ProviderOAuth2List) DeepCopy() *ProviderOAuth2List {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProviderOAuth2List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2Observation) DeepCopyInto(out *ProviderOAuth2Observation) {
	*out = *in
	if in.AccessCodeValidity != nil {
		in, out := &in.AccessCodeValidity, &out.AccessCodeValidity
		*out = new(string)
		**out = **in
	}
	if in.AccessTokenValidity != nil {
		in, out := &in.AccessTokenValidity, &out.AccessTokenValidity
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationFlow != nil {
		in, out := &in.AuthorizationFlow, &out.AuthorizationFlow
		*out = new(string)
		**out = **in
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientType != nil {
		in, out := &in.ClientType, &out.ClientType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeClaimsInIDToken != nil {
		in, out := &in.IncludeClaimsInIDToken, &out.IncludeClaimsInIDToken
		*out = new(bool)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.JwksSources != nil {
		in, out := &in.JwksSources, &out.JwksSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyMappings != nil {
		in, out := &in.PropertyMappings, &out.PropertyMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshTokenValidity != nil {
		in, out := &in.RefreshTokenValidity, &out.RefreshTokenValidity
		*out = new(string)
		**out = **in
	}
	if in.SigningKey != nil {
		in, out := &in.SigningKey, &out.SigningKey
		*out = new(string)
		**out = **in
	}
	if in.SubMode != nil {
		in, out := &in.SubMode, &out.SubMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2Observation.
func (in *ProviderOAuth2Observation) DeepCopy() *ProviderOAuth2Observation {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2Parameters) DeepCopyInto(out *ProviderOAuth2Parameters) {
	*out = *in
	if in.AccessCodeValidity != nil {
		in, out := &in.AccessCodeValidity, &out.AccessCodeValidity
		*out = new(string)
		**out = **in
	}
	if in.AccessTokenValidity != nil {
		in, out := &in.AccessTokenValidity, &out.AccessTokenValidity
		*out = new(string)
		**out = **in
	}
	if in.AuthenticationFlow != nil {
		in, out := &in.AuthenticationFlow, &out.AuthenticationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationFlow != nil {
		in, out := &in.AuthorizationFlow, &out.AuthorizationFlow
		*out = new(string)
		**out = **in
	}
	if in.AuthorizationFlowRef != nil {
		in, out := &in.AuthorizationFlowRef, &out.AuthorizationFlowRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AuthorizationFlowSelector != nil {
		in, out := &in.AuthorizationFlowSelector, &out.AuthorizationFlowSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientID != nil {
		in, out := &in.ClientID, &out.ClientID
		*out = new(string)
		**out = **in
	}
	if in.ClientSecretSecretRef != nil {
		in, out := &in.ClientSecretSecretRef, &out.ClientSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.ClientType != nil {
		in, out := &in.ClientType, &out.ClientType
		*out = new(string)
		**out = **in
	}
	if in.IncludeClaimsInIDToken != nil {
		in, out := &in.IncludeClaimsInIDToken, &out.IncludeClaimsInIDToken
		*out = new(bool)
		**out = **in
	}
	if in.IssuerMode != nil {
		in, out := &in.IssuerMode, &out.IssuerMode
		*out = new(string)
		**out = **in
	}
	if in.JwksSources != nil {
		in, out := &in.JwksSources, &out.JwksSources
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.PropertyMappings != nil {
		in, out := &in.PropertyMappings, &out.PropertyMappings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RefreshTokenValidity != nil {
		in, out := &in.RefreshTokenValidity, &out.RefreshTokenValidity
		*out = new(string)
		**out = **in
	}
	if in.SigningKey != nil {
		in, out := &in.SigningKey, &out.SigningKey
		*out = new(string)
		**out = **in
	}
	if in.SubMode != nil {
		in, out := &in.SubMode, &out.SubMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2Parameters.
func (in *ProviderOAuth2Parameters) DeepCopy() *ProviderOAuth2Parameters {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2Spec) DeepCopyInto(out *ProviderOAuth2Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2Spec.
func (in *ProviderOAuth2Spec) DeepCopy() *ProviderOAuth2Spec {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProviderOAuth2Status) DeepCopyInto(out *ProviderOAuth2Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProviderOAuth2Status.
func (in *ProviderOAuth2Status) DeepCopy() *ProviderOAuth2Status {
	if in == nil {
		return nil
	}
	out := new(ProviderOAuth2Status)
	in.DeepCopyInto(out)
	return out
}
